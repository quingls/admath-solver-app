{"version":3,"sources":["components/SidebarData.js","components/Navbar.js","routes/HomePage.js","routes/CarnotEfficiencyCalc.js","routes/WaterFlowRateCalc.js","routes/MichaelisMentenEq.js","routes/MoleCalc.js","routes/CompressibilityFactorCalc.js","routes/MachNumCalc.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarData","title","path","cName","Navbar","useState","sidebar","setSideBar","showSideBar","Provider","value","color","className","to","onClick","map","item","index","Home","history","useHistory","Container","Row","Col","push","CarnotEfficiency","coldTemp","setColdTemp","hotTemp","setHotTemp","result","setResult","coldTempUnit","setColdUnit","hotTempUnit","setHotUnit","type","onChange","e","target","temp1","temp2","tempResult","console","log","toFixed","WaterFlowRate","pipeGrade","setpipeGrade","pipeSize","setpipeSize","pipeInnerDiameter","setpipeInnerDiameter","waterVelocity","setwaterVelocity","waterVelocityUnit","pipeInnerDiameterUnit","resultUnit","piVal","Math","PI","tempres1","temp3","getDiameter","temp4","MichaelisMenten","michaelisConst","setmichaelisConst","maxReaxSpeed","setmaxReaxSpeed","substrateConc","setsubstrateConc","michaelisConstUnit","maxReaxSpeedUnit","substrateConcUnit","reactionRateUnit","MoleCalc","mass","setmass","moleWeight","setmoleWeight","massUnit","setmassUnit","moleWeightUnit","CompressibilityFactor","pressure","setpressure","volume","setvolume","molesNum","setmolesNum","gasConst","setgasConst","temp","settemp","pressureUnit","setpressureUnit","volumeUnit","setvolumeUnit","molesNumUnit","setmolesNumUnit","gasConstUnit","setgasConstUnit","tempUnit","settempUnit","temp5","MachNum","objSpeed","setobjSpeed","sndSpeed","setsndSpeed","objSpeedUnit","setobjSpeedUnit","sndSpeedUnit","setsndSpeedUnit","App","exact","component","Homepage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f2b4ded.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: 'Home', \r\n        path: '/',\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Carnot Efficiency ', \r\n        path: '/carnot-efficiency',\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Compressibility Factor ', \r\n        path: '/compressibility-factor',\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Mach Number ', \r\n        path: '/mach-number',\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Michaelis-Menten Equation', \r\n        path: '/michaelis-menten-equation',\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Mole Calculator', \r\n        path: '/mole',\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Water Flow Rate ', \r\n        path: '/water-flow-rate',\r\n        cName: 'nav-text'\r\n    }\r\n]\r\n","import React, {useState} from 'react';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport {Link} from 'react-router-dom';\r\nimport {SidebarData} from './SidebarData';\r\nimport './Navbar.css';\r\nimport {IconContext} from 'react-icons';\r\n\r\nfunction Navbar() {\r\n    const [sidebar, setSideBar] = useState(false);\r\n\r\n    const showSideBar = () => setSideBar(!sidebar);\r\n    return (\r\n        <>\r\n        <IconContext.Provider value={{ color: '#ffffff'}}>\r\n\r\n            <div className=\"navbar\">\r\n                <Link to=\"#\" className=\"menu-bars\">\r\n                    <FaIcons.FaBars onClick={showSideBar} />\r\n                </Link>\r\n            </div>\r\n            <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n                <ul className='nav-menu-items' onClick={showSideBar}>\r\n                    <li className=\"navbar-toggle\">\r\n                        <Link to=\"#\" className='menu-bars'>\r\n                            <AiIcons.AiOutlineClose />\r\n                        </Link>\r\n                    </li>\r\n                    {SidebarData.map((item, index) => {\r\n                        return (\r\n                            <li key={index} className={item.cName}>\r\n                                <Link to={item.path}>\r\n                                    <span>{item.title}</span>\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n\r\n            </nav>\r\n            </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport './HomePage.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Home(){\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <Container className=\"container\">\r\n                <Row>\r\n                    <Col>\r\n                    <button className=\"button\"\r\n                        onClick={() => {\r\n                            history.push(\"/carnot-efficiency\");\r\n                        }}\r\n                    >\r\n                        Carnot Efficiency Calculator\r\n                    </button>\r\n                    <button className=\"button\"\r\n                        onClick={() => {\r\n                            history.push(\"/water-flow-rate\");\r\n                        }}\r\n                    >\r\n                        Water Flow Rate Calculator\r\n                    </button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button className=\"button\"\r\n                        onClick={() => {\r\n                            history.push(\"/michaelis-menten-equation\");\r\n                        }}\r\n                    >\r\n                        Michaelis-Menten Equation Calculator\r\n                    </button>\r\n                    <button className=\"button\"\r\n                        onClick={() => {\r\n                            history.push(\"/mole\");\r\n                        }}\r\n                    >\r\n                        Mole Calculator\r\n                    </button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button className=\"button\"\r\n                        onClick={() => {\r\n                            history.push(\"/mach-number\");\r\n                        }}\r\n                    >\r\n                        Mach Number Calculator\r\n                    </button>\r\n                    <button className=\"button\"\r\n                        onClick={() => {\r\n                            history.push(\"compressibility-factor\");\r\n                        }}\r\n                    >\r\n                        Compressibility Factor Calculator\r\n                    </button>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </Container>\r\n            <Container className=\"about\">\r\n            Ariel L. Magpantay Jr.\r\n            Mariamne Gayle G. Jordan \r\n            BS ChE -Batangas State University\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, {useState} from \"react\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './Carnot.css';\r\n\r\nfunction CarnotEfficiency () {\r\n    let [coldTemp, setColdTemp] = useState('');\r\n    let [hotTemp, setHotTemp] = useState('');\r\n    let [result, setResult] = useState('');\r\n    let [coldTempUnit, setColdUnit] = useState('');\r\n    let [hotTempUnit, setHotUnit] = useState('');\r\n\r\n    function getEfficiency(){\r\n        let temp1 = coldTemp;\r\n        let temp2 = hotTemp;\r\n        let tempResult = 0;\r\n        console.log(coldTempUnit)\r\n        console.log(hotTempUnit)\r\n\r\n        if(coldTempUnit===hotTempUnit){\r\n            if(coldTempUnit==='celcius'){\r\n                tempResult = ((temp2+273.15)-(temp1+273.15)/(temp1*0.1))\r\n                setResult(tempResult.toFixed(5))\r\n                console.log(tempResult)\r\n            }if (coldTempUnit==='farenheit') {\r\n                tempResult = (((temp2-32)*(5/9)+273.15)-((temp2-32)*(5/9)+273.15)/((temp2-32)*(5/9)+273.15)*0.1)\r\n                setResult(tempResult.toFixed(5))\r\n                console.log(tempResult)\r\n            } else {\r\n                if (temp1===temp2){\r\n                    setResult(\"0\")\r\n                }else{\r\n                    tempResult = ((temp2-temp1)/temp2*0.1)\r\n                    setResult(tempResult.toFixed(5))\r\n                    console.log(tempResult)\r\n                }\r\n                \r\n            }\r\n        }else{\r\n            console.log('mismatched temperature unit')\r\n            console.log(coldTempUnit+''+hotTempUnit)\r\n            setResult(\"Incorrect combination of inputs!\")\r\n        }\r\n        setColdTemp('');\r\n        setColdUnit('');\r\n        setHotTemp('');\r\n        setHotUnit('');\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg\">\r\n            <header className=\"title\">\r\n                <h1 >Carnot Efficiency Calculator</h1>\r\n            </header>\r\n\r\n            <body  className=\"body\">\r\n                        <form>\r\n                            <label className=\"input1\">\r\n                                Cold Reservoir Temperature (Tc)\r\n                                <input \r\n                                    type=\"number\" \r\n                                    onChange={(e) => setColdTemp(e.target.value)}/>\r\n                                <select onChange={(e) => setColdUnit(e.target.value)}>\r\n                                    <option value=\"celcius\">°C</option>\r\n                                    <option value=\"farenheit\">°F</option>\r\n                                    <option value=\"kelvin\">K</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n                    \r\n                        <form>\r\n                            <label className=\"input2\">\r\n                                Hot Reservoir Temperature (Th)     \r\n                                <input \r\n                                    type=\"number\" \r\n                                    onChange={(e) => setHotTemp(e.target.value)}/>\r\n                                <select onChange={(e) => setHotUnit(e.target.value)}>\r\n                                    <option value=\"celcius\">°C</option>\r\n                                    <option value=\"farenheit\">°F</option>\r\n                                    <option value=\"kelvin\">K</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n                        <button className=\"button\"\r\n                            onClick={getEfficiency}\r\n                        >\r\n                        SUBMIT\r\n                        </button>\r\n                                \r\n                        <form>\r\n                            <label>\r\n                                Efficiency: <input className=\"result\" value={result}/>\r\n                            </label>\r\n                        </form>\r\n               \r\n            </body>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CarnotEfficiency;","import React, {useState} from \"react\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport \"./WaterFlowRate.css\";\r\n\r\nfunction WaterFlowRate(){\r\n    let [pipeGrade, setpipeGrade] = useState('');\r\n    let [pipeSize, setpipeSize] = useState('');\r\n    let [pipeInnerDiameter, setpipeInnerDiameter] = useState('');\r\n    let [waterVelocity, setwaterVelocity] = useState('');\r\n    let [waterVelocityUnit, setwaterVelocityUnit] = useState('m/s');\r\n    let [pipeInnerDiameterUnit, setpipeInnerDiameterUnit] = useState('mm');\r\n    let [result, setResult] = useState('');\r\n    let [resultUnit, setResultUnit] = useState('m^3/h');\r\n\r\n    \r\n    const piVal = Math.PI;\r\n\r\n    function getDiameter(pipeGrade, pipeSize){\r\n        if(pipeGrade===\"jis-sgp\"){\r\n            if(pipeSize===\"6A\"){\r\n                return 6.5;\r\n            }else if(pipeSize===\"8A\"){\r\n                return 9.2;\r\n            }else if(pipeSize===\"10A\"){\r\n                return 12.7;\r\n            }else if(pipeSize===\"15A\"){\r\n                return 16.1;\r\n            }else if(pipeSize===\"20A\"){\r\n                return 21.6;\r\n            }else if(pipeSize===\"25A\"){\r\n                return 27.6;\r\n            }else if(pipeSize===\"32A\"){\r\n                return 35.7;\r\n            }else if(pipeSize===\"40A\"){\r\n                return 41.6;\r\n            }else if(pipeSize===\"50A\"){\r\n                return 52.9;\r\n            }else if(pipeSize===\"65A\"){\r\n                return 67.9;\r\n            }else if(pipeSize===\"80A\"){\r\n                return 80.7;\r\n            }else if(pipeSize===\"100A\"){\r\n                return 105.3;\r\n            }else if(pipeSize===\"125A\"){\r\n                return 130.8;\r\n            }else if(pipeSize===\"150A\"){\r\n                return 155.2;\r\n            }else if(pipeSize===\"200A\"){\r\n                return 204.7;\r\n            }else if(pipeSize===\"250A\"){\r\n                return 254.2;\r\n            }else if(pipeSize===\"300A\"){\r\n                return 304.7;\r\n            }else if(pipeSize===\"350A\"){\r\n                return 339.8;\r\n            }else if(pipeSize===\"400A\"){\r\n                return 390.6;\r\n            }else if(pipeSize===\"450A\"){\r\n                return 441.4;\r\n            }else{\r\n                setpipeInnerDiameter(\"UNDEFINE\")\r\n            }\r\n        }else{\r\n            if(pipeSize===\"DN6\"){\r\n                return 7; \r\n            }else if(pipeSize===\"DN8\"){\r\n                return 9.9;\r\n            }else if(pipeSize===\"DN10\"){\r\n                return 13.6;\r\n            }else if(pipeSize===\"DN15\"){\r\n                return 17.3;\r\n            }else if(pipeSize===\"DN20\"){\r\n                return 22.3;\r\n            }else if(pipeSize===\"DN25\"){\r\n                return 28.5;\r\n            }else if(pipeSize===\"DN32\"){\r\n                return 37.2;\r\n            }else if(pipeSize===\"DN40\"){\r\n                return 43.1;\r\n            }else if(pipeSize===\"DN50\"){\r\n                return 54.5;\r\n            }else if(pipeSize===\"DN65\"){\r\n                return 70.3;\r\n            }else if(pipeSize===\"DN80\"){\r\n                return 82.5;\r\n            }else if(pipeSize===\"DN100\"){\r\n                return 107.1;\r\n            }else if(pipeSize===\"DN125\"){\r\n                return 131.7;\r\n            }else if(pipeSize===\"DN150\"){\r\n                return 159.3;\r\n            }else if(pipeSize===\"DN200\"){\r\n                return 207.3;\r\n            }else if(pipeSize===\"DN250\"){\r\n                return 260.4;\r\n            }else if(pipeSize===\"DN300\"){\r\n                return 309.7;\r\n            }else if(pipeSize===\"DN350\"){\r\n                return 339.6;\r\n            }else if(pipeSize===\"DN400\"){\r\n                return 388.8;\r\n            }else if(pipeSize===\"DN450\"){\r\n                return 437.2;\r\n            }else{\r\n                setpipeInnerDiameter(\"UNDEFINE\")\r\n            }\r\n        }\r\n    }\r\n    \r\n    function getWaterFlowRate(){\r\n        let temp1 = pipeGrade;\r\n        let temp2 = pipeSize;\r\n        let temp3 = getDiameter(temp1, temp2)\r\n        let temp4 = waterVelocity;\r\n        let tempResult = 0;\r\n        let tempres1 = 0;\r\n\r\n        setpipeInnerDiameter(temp3);\r\n        console.log(\"dia \"+temp3)\r\n\r\n        tempres1 = 3600 * piVal * temp4\r\n        console.log(tempres1)\r\n        tempResult = (tempres1*(((temp3/1000)/2))^2)\r\n        console.log(\"res \"+tempResult)\r\n    \r\n        setResult(tempResult.toFixed(5))\r\n        // setpipeInnerDiameter('')\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"bg\">\r\n            <header className=\"title\">\r\n                <h1 >Water Flow Rate Calculator</h1>\r\n            </header>\r\n\r\n            <body  className=\"body\">\r\n                        <form>\r\n                            <label className=\"input\">\r\n                                Pipe Grade: \r\n                                <select onChange={(e) => setpipeGrade(e.target.value)}>\r\n                                    <option value=\"jis-sgp\">JIS-SGP</option>\r\n                                    <option value=\"din 2488\">DIN 2488</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n                        <form>\r\n                            <label className=\"input\">\r\n                                Pipe Size: \r\n                                <select onChange={(e) => setpipeSize(e.target.value)}>\r\n                                    <option value=\"DN6\">DN6</option>\r\n                                    <option value=\"DN10\">DN10</option>\r\n                                    <option value=\"DN15\">DN15</option>\r\n                                    <option value=\"DN20\">DN20</option>\r\n                                    <option value=\"DN25\">DN25</option>\r\n                                    <option value=\"DN32\">DN32</option>\r\n                                    <option value=\"DN40\">DN40</option>\r\n                                    <option value=\"DN50\">DN50</option>\r\n                                    <option value=\"DN65\">DN65</option>\r\n                                    <option value=\"DN80\">DN80</option>\r\n                                    <option value=\"DN100\">DN100</option>\r\n                                    <option value=\"DN125\">DN125</option>\r\n                                    <option value=\"DN150\">DN150</option>\r\n                                    <option value=\"DN200\">DN200</option>\r\n                                    <option value=\"DN250\">DN250</option>\r\n                                    <option value=\"DN300\">DN300</option>\r\n                                    <option value=\"DN350\">DN350</option>\r\n                                    <option value=\"DN400\">DN400</option>\r\n                                    <option value=\"DN450\">DN450</option>\r\n                                    <option value=\"6A\">6A</option>\r\n                                    <option value=\"10A\">10A</option>\r\n                                    <option value=\"15A\">15A</option>\r\n                                    <option value=\"20A\">20A</option>\r\n                                    <option value=\"25A\">25A</option>\r\n                                    <option value=\"32A\">32A</option>\r\n                                    <option value=\"40A\">40A</option>\r\n                                    <option value=\"50A\">50A</option>\r\n                                    <option value=\"65A\">65A</option>\r\n                                    <option value=\"80A\">80A</option>\r\n                                    <option value=\"100A\">100A</option>\r\n                                    <option value=\"125A\">125A</option>\r\n                                    <option value=\"150A\">150A</option>\r\n                                    <option value=\"200A\">200A</option>\r\n                                    <option value=\"250A\">250A</option>\r\n                                    <option value=\"300A\">300A</option>\r\n                                    <option value=\"350A\">350A</option>\r\n                                    <option value=\"400A\">400A</option>\r\n                                    <option value=\"450A\">450A</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n                        <form>\r\n                            <label className=\"input\">\r\n                                Pipe Inner Diameter:  \r\n                                <input value={pipeInnerDiameter} />\r\n                                <input className=\"unit\" value={pipeInnerDiameterUnit}/>\r\n                            </label>\r\n                        </form>\r\n                        <form>\r\n                            <label className=\"input\">\r\n                                Water Velocity:  \r\n                                <input \r\n                                    type=\"number\" \r\n                                    onChange={(e) => setwaterVelocity(e.target.value)}/>\r\n                                <input className=\"unit\" value={waterVelocityUnit}/>\r\n                            </label>\r\n                        </form>\r\n                        <button className=\"button\"\r\n                            onClick={getWaterFlowRate}\r\n                        >\r\n                        SUBMIT\r\n                        </button>\r\n                                \r\n                        <form>\r\n                            <label>\r\n                                Water Flow Rate: <input className=\"result\" value={result}/>\r\n                                <input className=\"unit\" value={resultUnit}/>\r\n                            </label>\r\n                        </form>\r\n               \r\n            </body>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WaterFlowRate;","import React, {useState} from \"react\";\r\nimport './MichaelisMentenEq.css';\r\n\r\nfunction MichaelisMenten(){\r\n    let [michaelisConst, setmichaelisConst] = useState('');\r\n    let [maxReaxSpeed, setmaxReaxSpeed] = useState('');\r\n    let [substrateConc, setsubstrateConc] = useState('');\r\n    let [michaelisConstUnit, setmichaelisConstUnit] = useState('molars');\r\n    let [maxReaxSpeedUnit, setmaxReaxSpeedUnit] = useState('1/s');\r\n    let [substrateConcUnit, setsubstrateConcUnit] = useState('molars');\r\n    let [reactionRateUnit, setreactionRateUnit] = useState('1/s');\r\n    let [result, setResult] = useState('');\r\n\r\n\r\n    function getReactionRate(){\r\n        let temp1 = michaelisConst;\r\n        let temp2 = maxReaxSpeed;\r\n        let temp3 = substrateConc;\r\n        let tempResult = 0;\r\n\r\n        tempResult=((temp2*temp3)/(temp3+temp1))\r\n        if(tempResult==null){\r\n            setResult(\"Incorrect input!\")\r\n        }else{\r\n            setResult(tempResult.toFixed(5))\r\n        }\r\n\r\n        setmichaelisConst('');\r\n        setmaxReaxSpeed('');\r\n        setsubstrateConc('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg\">\r\n            <header className=\"title\">\r\n                <h1 >Michaelis Menten Equation</h1>\r\n            </header>\r\n\r\n            <body className=\"body\">\r\n                <form>\r\n                    <label className=\"input1\">\r\n                        Michaelis Constant:\r\n                        <input \r\n                            type=\"number\" \r\n                            onChange={(e) => setmichaelisConst(e.target.value)}/>\r\n                        <input className=\"unit\" value={michaelisConstUnit}/>\r\n                   </label>\r\n                </form>\r\n                    \r\n                <form>\r\n                    <label className=\"input2\">\r\n                        Max Reaction Speed:     \r\n                        <input \r\n                            type=\"number\" \r\n                            onChange={(e) => setmaxReaxSpeed(e.target.value)}/>\r\n                        <input className=\"unit\"value={maxReaxSpeedUnit}/>\r\n                    </label>\r\n                </form>\r\n\r\n                <form>\r\n                    <label className=\"input3\">\r\n                        Substrate Concentration:   \r\n                        <input \r\n                           type=\"number\" \r\n                            onChange={(e) => setsubstrateConc(e.target.value)}/>\r\n                        <input className=\"unit\" value={substrateConcUnit}/>\r\n                    </label>\r\n                </form>\r\n                <button className=\"button\"\r\n                    onClick={getReactionRate}\r\n                    >SUBMIT\r\n                </button>\r\n                                \r\n                <form>\r\n                    <label>\r\n                        ReactionRate: <input className=\"result\" value={result}/>\r\n                        <input className=\"unit\" value={reactionRateUnit} />\r\n                        </label>\r\n                        </form>\r\n               \r\n            </body>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MichaelisMenten;\r\n","import React, {useState} from \"react\";\r\nimport './MoleCalc.css'\r\n\r\n\r\nfunction MoleCalc(){\r\n    let [mass, setmass] = useState('');\r\n    let [moleWeight, setmoleWeight] = useState('');\r\n    let [result, setResult] = useState('');\r\n    let [massUnit, setmassUnit] = useState('');\r\n    let [moleWeightUnit, setmoleWeightUnit] = useState(\"g/mol\");\r\n    let [resultUnit, setresultUnit] = useState(\"moles\");\r\n\r\n    function getMoles(){\r\n        let temp1 = mass;\r\n        let temp2 = moleWeight;\r\n        let tempResult = 0;\r\n\r\n        console.log(massUnit)\r\n        console.log(moleWeightUnit)\r\n\r\n        if(temp1===0){\r\n            setResult(\"0\")\r\n        }else{\r\n           if(massUnit===\"g\"){\r\n                tempResult = temp1/temp2\r\n                setResult(tempResult.toFixed(5))\r\n                console.log(tempResult)\r\n           }else{\r\n               if(massUnit===\"kg\"){\r\n                   tempResult = (temp1*10000)/temp2\r\n                   setResult(tempResult.toFixed(5))\r\n                   console.log(tempResult)\r\n               }else{\r\n                   if(massUnit===\"lbs\"){\r\n                       tempResult = (temp1*453.592)/temp2\r\n                       setResult(tempResult.toFixed(5))\r\n                       console.log(tempResult)\r\n                   }else{\r\n                       tempResult=(temp1*28.35)/temp2\r\n                       setResult(tempResult.toFixed(5))\r\n                       console.log(tempResult)\r\n                    }\r\n               }\r\n           }\r\n        }\r\n        if(temp1==null){\r\n            setResult(\"Incorrect inputs!\")\r\n        }\r\n        setmass('');\r\n        setmassUnit('');\r\n        setmoleWeight('');\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg\">\r\n            <header className=\"title\">\r\n                <h1 >Moles Calculator</h1>\r\n            </header>\r\n\r\n            <body  className=\"body\">\r\n                        <form>\r\n                            <label className=\"input\">\r\n                                Mass :\r\n                                <input \r\n                                    type=\"number\" \r\n                                    onChange={(e) => setmass(e.target.value)}/>\r\n                                <select onChange={(e) => setmassUnit(e.target.value)}>\r\n                                    <option value=\"g\">g</option>\r\n                                    <option value=\"kg\">kg</option>\r\n                                    <option value=\"lbs\">lbs</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n                    \r\n                        <form>\r\n                            <label className=\"input\">\r\n                                Molecular Weight:    \r\n                                <input \r\n                                    type=\"number\" \r\n                                    onChange={(e) => setmoleWeight(e.target.value)}/>\r\n                                <input className=\"unit\"value={moleWeightUnit}/>\r\n                            </label>\r\n                        </form>\r\n                        <button className=\"button\"\r\n                            onClick={getMoles}\r\n                        >\r\n                        SUBMIT\r\n                        </button>\r\n                                \r\n                        <form>\r\n                            <label>\r\n                                Moles: <input className=\"result\" value={result}/>\r\n                                <input className=\"unit\"value={resultUnit}/>\r\n                            </label>\r\n                        </form>\r\n               \r\n            </body>\r\n        </div>\r\n    );\r\n}\r\nexport default MoleCalc;","import React, {useState} from \"react\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './Compressibility.css';\r\n\r\nfunction CompressibilityFactor(){\r\n    let [pressure, setpressure] = useState('');\r\n    let [volume, setvolume] = useState('');\r\n    let [molesNum, setmolesNum] = useState('');\r\n    let [gasConst, setgasConst] = useState('');\r\n    let [temp, settemp] = useState('');\r\n\r\n    let [pressureUnit, setpressureUnit] = useState('');\r\n    let [volumeUnit, setvolumeUnit] = useState('');\r\n    let [molesNumUnit, setmolesNumUnit] = useState('mol');\r\n    let [gasConstUnit, setgasConstUnit] = useState('');\r\n    let [tempUnit, settempUnit] = useState('');\r\n\r\n    let [result, setResult] = useState('');\r\n\r\n    function getCompressibilityFactor(){\r\n        let temp1 = pressure;\r\n        let temp2 = volume;\r\n        let temp3 = molesNum;\r\n        let temp4 = gasConst;\r\n        let temp5 = temp;\r\n        let tempResult = 0;\r\n\r\n\r\n        if(pressureUnit===\"atm\"){\r\n            setvolumeUnit(\"liters\")\r\n            setmolesNumUnit(\"mol\")\r\n            setgasConstUnit(\"L⋅atm/mol⋅K\")\r\n            settempUnit(\"K\")\r\n            console.log(\"atmmmmm\")\r\n        }else{\r\n            if(pressureUnit===\"pa\"){\r\n                setvolumeUnit(\"m3\")\r\n                setmolesNumUnit(\"mol\")\r\n                setgasConstUnit(\"m3⋅pa/K⋅mol\")\r\n                settempUnit(\"K\")\r\n                console.log(\"paaaaa\")\r\n\r\n            }else{\r\n                if(pressureUnit===\"bar\"){\r\n                    setvolumeUnit(\"liters\")\r\n                    setmolesNumUnit(\"mol\")\r\n                    setgasConstUnit(\"L⋅bar/K⋅mol\")\r\n                    settempUnit(\"K\")\r\n                    console.log(\"baaaar\")\r\n\r\n                }else{\r\n                    console.log(pressureUnit+''+volumeUnit)\r\n                    setResult(\"Incorrect combination of inputs!\")\r\n                }\r\n            }\r\n        }\r\n        tempResult = (temp1*temp2)/ ((temp3*temp4)*temp5)\r\n        setResult(tempResult.toFixed(5))\r\n        setpressure('');\r\n        setvolume('');\r\n        setmolesNum('');\r\n        setgasConst('');\r\n        settemp('');\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg\">\r\n            <header className=\"title\">\r\n                <h1 >Compressibility Factor Calculator</h1>\r\n            </header>\r\n\r\n            <body  className=\"body\">\r\n                        <form>\r\n                            <label className=\"input\">\r\n                                Pressure: \r\n                                <input \r\n                                    type=\"number\" \r\n                                    onChange={(e) => setpressure(e.target.value)}/>\r\n                                <select onChange={(e) => setpressureUnit(e.target.value)}>\r\n                                    <option value=\"bar\">bar</option>\r\n                                    <option value=\"pa\">pa</option>\r\n                                    <option value=\"atm\">atm</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n                    \r\n                        <form>\r\n                            <label className=\"input\">\r\n                                Volume    \r\n                                <input \r\n                                    type=\"number\" \r\n                                    onChange={(e) => setvolume(e.target.value)}/>\r\n                                <input className=\"unit\" value={volumeUnit}/>\r\n                            </label>\r\n                        </form>\r\n                        <form>\r\n                            <label className=\"input\">\r\n                                Number of Moles    \r\n                                <input \r\n                                    type=\"number\" \r\n                                    onChange={(e) => setmolesNum(e.target.value)}/>\r\n                                <input className=\"unit\" value={molesNumUnit}/>\r\n                            </label>\r\n                        </form>\r\n                        <form>\r\n                            <label className=\"input\">\r\n                                Gas Constant    \r\n                                <input \r\n                                    type=\"number\" \r\n                                    onChange={(e) => setgasConst(e.target.value)}/>\r\n                                <input className=\"unit\" value={gasConstUnit}/>\r\n                            </label>\r\n                        </form>\r\n                        <form>\r\n                            <label className=\"input\">\r\n                                Temperature   \r\n                                <input \r\n                                    type=\"number\" \r\n                                    onChange={(e) => settemp(e.target.value)}/>\r\n                                <input className=\"unit\" value={tempUnit}/>\r\n                            </label>\r\n                        </form>\r\n                        <button className=\"button\"\r\n                            onClick={getCompressibilityFactor}\r\n                        >\r\n                        SUBMIT\r\n                        </button>\r\n                                \r\n                        <form>\r\n                            <label>\r\n                                CompressibilityFactor: <input className=\"result\" value={result}/>\r\n                            </label>\r\n                        </form>\r\n               \r\n            </body>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompressibilityFactor;\r\n","import React, { useState} from \"react\";\r\n// import { Container, Row, Col } from 'react-bootstrap';\r\nimport './MachNum.css'\r\n\r\nfunction MachNum(){\r\n    let [objSpeed, setobjSpeed] = useState('');\r\n    let [sndSpeed, setsndSpeed] = useState('');\r\n    let [result, setResult] = useState('');\r\n    let [objSpeedUnit, setobjSpeedUnit] = useState('');\r\n    let [sndSpeedUnit, setsndSpeedUnit] = useState('');\r\n\r\n    function getMach(){\r\n        let temp1 = objSpeed;\r\n        let temp2 = sndSpeed;\r\n        let tempResult = 0;\r\n        console.log(objSpeedUnit)\r\n        console.log(sndSpeedUnit)\r\n\r\n        if(objSpeedUnit===sndSpeedUnit){\r\n            tempResult = temp1/temp2\r\n            setResult(tempResult)\r\n            console.log(tempResult)\r\n        }else{\r\n            if(temp1 === 0){\r\n                setResult(\"UNDEFINE\")\r\n            }else{\r\n                console.log('mismatched temperature unit')\r\n                console.log(objSpeedUnit+''+sndSpeedUnit)\r\n                setResult(\"Incorrect combination of inputs!\")\r\n            }\r\n        }\r\n        \r\n        setobjSpeed('');\r\n        setobjSpeedUnit('');\r\n        setsndSpeed('');\r\n        setsndSpeedUnit('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg\">\r\n            <header className=\"title\">\r\n                <h1 >Mach Number Calculator</h1>\r\n            </header>\r\n\r\n            <body  className=\"body\">\r\n                        <form>\r\n                            <label className=\"input1\">\r\n                                Speed of Object\r\n                                <input \r\n                                    type=\"number\" \r\n                                    value={objSpeed}\r\n                                    onChange={(e) => setobjSpeed(e.target.value)}/>\r\n                                <select onChange={(e) => setobjSpeedUnit(e.target.value)}>\r\n                                    <option value=\"ms\">m/s</option>\r\n                                    <option value=\"km/kmh\">km/h</option>\r\n                                    <option value=\"fts\">ft/s</option>\r\n                                    <option value=\"mph\">mph</option>\r\n                                    <option value=\"kms\">km/s</option>\r\n                                    <option value=\"knots\">knots</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n                    \r\n                        <form>\r\n                            <label className=\"input2\">\r\n                                Speed of Sound     \r\n                                <input \r\n                                    type=\"number\" \r\n                                    value={sndSpeed}\r\n                                    onChange={(e) => setsndSpeed(e.target.value)}/>\r\n                                <select  onChange={(e) => setsndSpeedUnit(e.target.value)}>\r\n                                    <option value=\"ms\">m/s</option>\r\n                                    <option value=\"km/kmh\">km/h</option>\r\n                                    <option value=\"fts\">ft/s</option>\r\n                                    <option value=\"mph\">mph</option>\r\n                                    <option value=\"kms\">km/s</option>\r\n                                    <option value=\"knots\">knots</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n                        <button className=\"button\"\r\n                            onClick={getMach}\r\n                        >\r\n                        SUBMIT\r\n                        </button>\r\n                                \r\n                        <form>\r\n                            <label>\r\n                                Mach Number: <input className=\"result\" value={result}/>\r\n                            </label>\r\n                        </form>\r\n            </body>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MachNum;\r\n","import './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Homepage from './routes/HomePage';\nimport CarnotEfficiency from './routes/CarnotEfficiencyCalc';\nimport WaterFlowRate from './routes/WaterFlowRateCalc';\nimport MichaelisMenten from './routes/MichaelisMentenEq';\nimport MoleCalc from './routes/MoleCalc';\nimport CompressibilityFactor from './routes/CompressibilityFactorCalc';\nimport MachNum from './routes/MachNumCalc'; \n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \n      {/* ROUTES */}\n        <BrowserRouter>\n          <Navbar />  \n          <Switch>\n            <Route path='/' exact component={Homepage}/>\n            <Route path='/carnot-efficiency' exact component={CarnotEfficiency}/>\n            <Route path='/compressibility-factor' exact component={CompressibilityFactor}/>\n            <Route path='/mach-number' exact component={MachNum}/>\n            <Route path='/michaelis-menten-equation' exact component={MichaelisMenten}/>\n            <Route path='/mole' exact component={MoleCalc}/>\n            <Route path='/water-flow-rate' exact component={WaterFlowRate}/>\n          </Switch>\n        </BrowserRouter>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n     <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}